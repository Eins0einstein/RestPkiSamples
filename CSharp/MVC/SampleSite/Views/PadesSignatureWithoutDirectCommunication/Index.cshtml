@using Lacuna.RestPki.SampleSite.Models
@model SignatureStartModel

<h2>PAdES Signature without direct communication between Web PKI and REST PKI</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "signForm", role = "form" })) {
    @Html.ValidationSummary("", new { @class = "text-danger" })

    @*
        Hidden fields used to pass data from the action to the "signature form" javascript (see below) and
        vice-versa.
    *@
    @Html.HiddenFor(m => m.CertThumb, new { @id = "certThumb" })
    @Html.HiddenFor(m => m.CertContent, new { @id = "certContent" })

    <div class="form-group">
        <label>File to sign</label>
        <p>You'll be signing <a href='/Download/Sample'>this sample document</a>.</p>
    </div>

    @*
        Render a select (combo box) to list the user's certificates. For now it will be empty, we'll populate
        it later on (see signature-start-form.js file).
    *@
    <div class="form-group">
        <label for="certificateSelect">Choose a certificate</label>
        <select id="certificateSelect" class="form-control"></select>
    </div>

    @*
        Action buttons. Notice that the "Sign File" button is NOT a submit button. When the user clicks the
        button, we must first use the Web PKI component to perform the client-side computation necessary and
        only when that computation is finished we'll submit the form programmatically (see
        signature-start-form.js).
    *@
    <button id="signButton" type="button" class="btn btn-primary">Sign File</button>
    <button id="refreshButton" type="button" class="btn btn-default">Refresh Certificates</button>
}

@section Scripts {

    @*
        The file below contains the JS lib for accessing the Web PKI component. For more information, see:
        https://docs.lacunasoftware.com/en-us/articles/web-pki/index.html
    *@
    <script src="@Url.Content("~/Content/js/lacuna-web-pki-2.11.0.js")"></script>

    @*
        The file below contains the logic for calling the Web PKI component. It is only an example, feel free
        to alter it to meet your application's needs. You can also bring the code into the javascript block
        below if you prefer.
    *@
    <script src="@Url.Content("~/Content/js/signature-start-form.js")"></script>
    <script>
        $(document).ready(function () {
            // Once the page is ready, we call the init() function on the javascript code (see
            // signature-start-form.js).
            signatureStartForm.init({
                form: $('#signForm'),                       // The form that should be submitted.
                certificateSelect: $('#certificateSelect'), // The select element to list certificates.
                refreshButton: $('#refreshButton'),         // The "refresh" button.
                signButton: $('#signButton'),               // The button that initiates the operation.
                certThumbField: $('#certThumb'),            // The "certThumb" hidden field reference.
                certContentField: $('#certContent')         // The "certContent" hidden field reference.
            });
        });
    </script>

}